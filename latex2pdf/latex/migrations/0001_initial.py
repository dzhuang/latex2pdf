# Generated by Django 2.2.17 on 2021-01-18 17:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields
import latex.models
import re

import re
from django.conf import settings
from django.db import migrations, models
import django.core.validators
import os
import django.utils.timezone
from latex.models import OverwriteStorage


def generate_superuser(apps, schema_editor):
    # https://stackoverflow.com/a/53261943/3437454
    from django.contrib.auth import get_user_model
    from django.db import IntegrityError
    User = get_user_model()  # noqa

    django_superuser_username = os.environ.get('DJANGO_SUPERUSER_USERNAME', None)
    django_superuser_email = os.environ.get('DJANGO_SUPERUSER_EMAIL', None)
    django_superuser_password = os.environ.get('DJANGO_SUPERUSER_PASSWORD', None)
    if not (django_superuser_username and django_superuser_password):
        print("No superuser created.")
        return

    try:
        User.objects.create_superuser(
            username=django_superuser_username,
            email=django_superuser_email,
            password=django_superuser_password)
    except IntegrityError:
        print("Superuser with given settings already exists.")
    else:
        print("Superuser created.")


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LatexCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zip_file_hash', models.TextField(verbose_name='Zip File Hash')),
                ('compile_error', models.TextField(blank=True, null=True, verbose_name='Compile Error')),
                ('creation_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Creation time')),
            ],
            options={
                'ordering': ('-creation_time',),
            },
        ),
        migrations.CreateModel(
            name='LatexProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(db_index=True, max_length=200, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')], verbose_name='Project identifier')),
                ('name', models.CharField(max_length=200, verbose_name='Project name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Project Description')),
                ('is_private', models.BooleanField(default=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='LatexPdf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='File name')),
                ('pdf', models.FileField(blank=True, null=True, storage=latex.models.OverwriteStorage(), upload_to=latex.models.pdf_upload_to)),
                ('mediabox', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='Media box size, in points')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='latex.LatexCollection', verbose_name='Collection')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='latex.LatexProject', verbose_name='Project')),
            ],
            options={
                'verbose_name': 'LaTeXPdf',
                'verbose_name_plural': 'LaTeXPdfs',
            },
        ),
        migrations.AddField(
            model_name='latexcollection',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='latex.LatexProject', verbose_name='Project'),
        ),
        migrations.AlterUniqueTogether(
            name='latexcollection',
            unique_together={('project', 'zip_file_hash')},
        ),
    ]
